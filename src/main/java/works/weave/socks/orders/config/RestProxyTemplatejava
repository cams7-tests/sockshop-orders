package works.weave.socks.orders.config;

import java.net.InetSocketAddress;
import java.net.Proxy;
import javax.annotation.PostConstruct;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.http.client.SimpleClientHttpRequestFactory;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import lombok.extern.log4j.Log4j2;

@Log4j2
@Component
public final class RestProxyTemplate {

  @Autowired RestTemplate restTemplate;

  @Bean
  public RestTemplate restTemplate() {
    return new RestTemplate();
  }

  @Value("${proxy.host:}")
  private String host;

  @Value("${proxy.port:}")
  private String port;

  @PostConstruct
  public void init() {
    if (host.isEmpty() || port.isEmpty()) {
      return;
    }
    int portNr = -1;
    try {
      portNr = Integer.parseInt(port);
    } catch (NumberFormatException e) {
      log.error("Unable to parse the proxy port number");
    }
    SimpleClientHttpRequestFactory factory = new SimpleClientHttpRequestFactory();
    InetSocketAddress address = new InetSocketAddress(host, portNr);
    Proxy proxy = new Proxy(Proxy.Type.HTTP, address);
    factory.setProxy(proxy);

    restTemplate.setRequestFactory(factory);
  }

  public RestTemplate getRestTemplate() {
    return restTemplate;
  }
}
